"""add paper authors

Revision ID: 198561f49dc2
Revises: efc5e3ed5784
Create Date: 2025-08-24 06:02:15.500762

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '198561f49dc2'
down_revision: Union[str, Sequence[str], None] = 'efc5e3ed5784'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('paper_authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authorName', sa.String(length=1000), nullable=False),
    sa.Column('paperId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deletedAt', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['paperId'], ['papers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paperId', 'authorName', name='uq_paper_authors_paper_author')
    )
    op.create_index(op.f('ix_paper_authors_id'), 'paper_authors', ['id'], unique=False)
    op.create_index('ix_paper_authors_paper', 'paper_authors', ['paperId'], unique=False)
    op.create_index(op.f('ix_paper_authors_paperId'), 'paper_authors', ['paperId'], unique=False)
    op.add_column('labs', sa.Column('ownerId', sa.UUID(), nullable=False))
    op.add_column('labs', sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('labs', sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('labs', sa.Column('deletedAt', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint(op.f('uix_owner_name'), 'labs', type_='unique')
    op.create_unique_constraint('uix_owner_name', 'labs', ['ownerId', 'name'])
    op.drop_constraint(op.f('labs_owner_id_fkey'), 'labs', type_='foreignkey')
    op.create_foreign_key(None, 'labs', 'users', ['ownerId'], ['id'], ondelete='CASCADE')
    op.drop_column('labs', 'created_at')
    op.drop_column('labs', 'owner_id')
    op.drop_column('labs', 'deleted_at')
    op.drop_column('labs', 'updated_at')
    op.add_column('papers', sa.Column('paperPublishedAt', sa.DateTime(timezone=True), nullable=False))
    op.add_column('papers', sa.Column('paperUpdatedAt', sa.DateTime(timezone=True), nullable=False))
    op.add_column('papers', sa.Column('entryId', sa.String(length=1000), nullable=False))
    op.add_column('papers', sa.Column('pdfUrl', sa.String(length=1000), nullable=False))
    op.add_column('papers', sa.Column('primaryCategory', sa.String(length=1000), nullable=False))
    op.add_column('papers', sa.Column('categories', sa.String(length=1000), nullable=True))
    op.add_column('papers', sa.Column('doi', sa.String(length=1000), nullable=True))
    op.add_column('papers', sa.Column('comment', sa.Text(), nullable=True))
    op.add_column('papers', sa.Column('journalRef', sa.Text(), nullable=True))
    op.add_column('papers', sa.Column('license', sa.Text(), nullable=True))
    op.add_column('papers', sa.Column('labId', sa.Integer(), nullable=False))
    op.add_column('papers', sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('papers', sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('papers', sa.Column('deletedAt', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('papers', 'abstract',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_index(op.f('ix_papers_arxiv_id'), table_name='papers')
    op.drop_index(op.f('ix_papers_lab_id'), table_name='papers')
    op.drop_index(op.f('ix_papers_lab'), table_name='papers')
    op.create_index('ix_papers_lab', 'papers', ['labId'], unique=False)
    op.drop_index(op.f('ix_papers_published_at'), table_name='papers')
    op.create_index('ix_papers_published_at', 'papers', ['paperPublishedAt'], unique=False)
    op.drop_constraint(op.f('uq_papers_lab_arxiv'), 'papers', type_='unique')
    op.create_unique_constraint('uq_papers_lab_arxiv', 'papers', ['labId', 'id'])
    op.create_index(op.f('ix_papers_labId'), 'papers', ['labId'], unique=False)
    op.drop_constraint(op.f('papers_lab_id_fkey'), 'papers', type_='foreignkey')
    op.create_foreign_key(None, 'papers', 'labs', ['labId'], ['id'], ondelete='CASCADE')
    op.drop_column('papers', 'arxiv_id')
    op.drop_column('papers', 'published_at')
    op.drop_column('papers', 'url')
    op.drop_column('papers', 'updated_at')
    op.drop_column('papers', 'authors')
    op.drop_column('papers', 'deleted_at')
    op.drop_column('papers', 'lab_id')
    op.drop_column('papers', 'created_at')
    op.add_column('users', sa.Column('hashedPassword', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('deletedAt', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_column('users', 'deletedAt')
    op.drop_column('users', 'updatedAt')
    op.drop_column('users', 'createdAt')
    op.drop_column('users', 'hashedPassword')
    op.add_column('papers', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('papers', sa.Column('lab_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('papers', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('papers', sa.Column('authors', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('papers', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('papers', sa.Column('url', sa.VARCHAR(length=1000), autoincrement=False, nullable=True))
    op.add_column('papers', sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('papers', sa.Column('arxiv_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'papers', type_='foreignkey')
    op.create_foreign_key(op.f('papers_lab_id_fkey'), 'papers', 'labs', ['lab_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_papers_labId'), table_name='papers')
    op.drop_constraint('uq_papers_lab_arxiv', 'papers', type_='unique')
    op.create_unique_constraint(op.f('uq_papers_lab_arxiv'), 'papers', ['lab_id', 'arxiv_id'], postgresql_nulls_not_distinct=False)
    op.drop_index('ix_papers_published_at', table_name='papers')
    op.create_index(op.f('ix_papers_published_at'), 'papers', ['published_at'], unique=False)
    op.drop_index('ix_papers_lab', table_name='papers')
    op.create_index(op.f('ix_papers_lab'), 'papers', ['lab_id'], unique=False)
    op.create_index(op.f('ix_papers_lab_id'), 'papers', ['lab_id'], unique=False)
    op.create_index(op.f('ix_papers_arxiv_id'), 'papers', ['arxiv_id'], unique=False)
    op.alter_column('papers', 'abstract',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('papers', 'deletedAt')
    op.drop_column('papers', 'updatedAt')
    op.drop_column('papers', 'createdAt')
    op.drop_column('papers', 'labId')
    op.drop_column('papers', 'license')
    op.drop_column('papers', 'journalRef')
    op.drop_column('papers', 'comment')
    op.drop_column('papers', 'doi')
    op.drop_column('papers', 'categories')
    op.drop_column('papers', 'primaryCategory')
    op.drop_column('papers', 'pdfUrl')
    op.drop_column('papers', 'entryId')
    op.drop_column('papers', 'paperUpdatedAt')
    op.drop_column('papers', 'paperPublishedAt')
    op.add_column('labs', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('labs', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('labs', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('labs', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'labs', type_='foreignkey')
    op.create_foreign_key(op.f('labs_owner_id_fkey'), 'labs', 'users', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('uix_owner_name', 'labs', type_='unique')
    op.create_unique_constraint(op.f('uix_owner_name'), 'labs', ['owner_id', 'name'], postgresql_nulls_not_distinct=False)
    op.drop_column('labs', 'deletedAt')
    op.drop_column('labs', 'updatedAt')
    op.drop_column('labs', 'createdAt')
    op.drop_column('labs', 'ownerId')
    op.drop_index(op.f('ix_paper_authors_paperId'), table_name='paper_authors')
    op.drop_index('ix_paper_authors_paper', table_name='paper_authors')
    op.drop_index(op.f('ix_paper_authors_id'), table_name='paper_authors')
    op.drop_table('paper_authors')
    # ### end Alembic commands ###
